{"version":3,"sources":["components/CarComponent.js","components/CardetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/bookingForm.js","components/MainComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","shared/cars.js","redux/cars.js","shared/bookings.js","redux/bookings.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["RenderCarList","car","index","Card","className","Row","Col","md","CardImg","top","width","src","image","alt","carModal","CardBody","CardTitle","CardSubtitle","color","seatingCapacity","rentPerDay","to","id","Button","disabled","availability","style","margin","outline","Cars","props","carslist","cars","map","RenderCarDetails","carDetails","Fragment","vehicleNumber","fuelType","engine","details","RenderBookings","bookings","length","console","log","Table","borderless","name","contactNo","issueDate","toLocaleDateString","day","month","year","returnDate","CarDetail","Breadcrumb","BreadcrumbItem","active","Header","Jumbotron","fluid","Component","Footer","href","BookingForm","handleIssueDate","date","setState","isDisable","handleReturnDate","state","contact","handleInputChange","bind","handleSubmit","checkIsBooked","event","this","addbooking","changeavailability","preventDefault","target","value","Form","onSubmit","FormGroup","Label","htmlFor","Input","type","placeholder","required","firstname","onChange","telnum","selected","placeholderText","minDate","Date","addDays","onClick","isbooked","history","goBack","carId","parseInt","match","params","withRouter","Main","exact","path","component","filter","booking","connect","dispatch","payload","CARS","action","newIndex","newstate","slice","BOOKINGS","Bookings","concat","store","createStore","combineReducers","App","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2YAMA,SAASA,EAAT,GAAoC,IAAZC,EAAW,EAAXA,IAAIC,EAAO,EAAPA,MACxB,OACI,kBAACC,EAAA,EAAD,CAAMC,UAAU,gBACZ,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKV,EAAIW,MAAOC,IAAKZ,EAAIa,SAAUV,UAAU,aAE3E,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACQ,EAAA,EAAD,KACI,kBAACV,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACS,EAAA,EAAD,CAAWZ,UAAU,YAAYH,EAAIa,UACrC,kBAACG,EAAA,EAAD,CAAcb,UAAU,cACpB,0BAAMA,UAAU,SAAQ,0BAAMA,UAAU,2BAAxC,IAA2EH,EAAIiB,OAC/E,0BAAMd,UAAU,mBAAkB,0BAAMA,UAAU,oBAA2BH,EAAIkB,gBAAjF,WACA,0BAAMf,UAAU,cAAa,0BAAMA,UAAU,oBAA7C,IAAyEH,EAAImB,WAA7E,YAGR,kBAACd,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,0BAElB,kBAAC,IAAD,CAAMiB,GAAE,oBAAepB,EAAIqB,GAAnB,YAAyBpB,IAAU,kBAACqB,EAAA,EAAD,CAAQC,UAAWvB,EAAIwB,aAAcC,MAAO,CAACC,OAAO,QAApD,aAE3C,kBAAC,IAAD,CAAMN,GAAE,gBAAWpB,EAAIqB,GAAf,YAAqBpB,IAAU,kBAACqB,EAAA,EAAD,CAAQK,SAAO,EAACV,MAAM,aAAtB,kBAWnE,IA0BeW,EA1BD,SAACC,GACX,IAAMC,EAAWD,EAAME,KAAKC,KAAI,SAAChC,EAAKC,GAClC,OACQ,yBAAKE,UAAU,SAGX,kBAACJ,EAAD,CAAeC,IAAKA,EAAKC,MAAOA,QAIhD,OACI,yBAAKE,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,6CACA,+BAGR,6BAGK2B,K,2BCrDjB,SAASG,EAAT,GAA8C,IAAnBC,EAAkB,EAAlBA,WAAWjC,EAAO,EAAPA,MAC9B,OAAe,MAAZiC,EAEK,kBAAC,IAAMC,SAAP,KAEI,kBAACjC,EAAA,EAAD,CAAMC,UAAU,kBACZ,kBAACC,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACC,EAAA,EAAD,CAASC,KAAG,EAACC,MAAM,OAAOC,IAAKwB,EAAWvB,MAAOC,IAAKsB,EAAWrB,SAAUV,UAAU,mBAErF,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACQ,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWZ,UAAU,YAAY+B,EAAWrB,UAC5C,kBAACG,EAAA,EAAD,CAAcb,UAAU,kBACpB,0BAAMA,UAAU,SAAQ,0BAAMA,UAAU,2BAAxC,IAA2E+B,EAAWjB,OACtF,0BAAMd,UAAU,mBAAkB,0BAAMA,UAAU,oBAA2B+B,EAAWhB,gBAAxF,YAEJ,wBAAIf,UAAU,QAAd,kBAAoC,0BAAMA,UAAU,oBAApD,IAAgF+B,EAAWf,YAC3F,kBAAC,IAAD,CAAMC,GAAE,oBAAec,EAAWb,GAA1B,YAAgCpB,IAAU,kBAACqB,EAAA,EAAD,CAAQnB,UAAU,uBAAuBoB,UAAWW,EAAWV,cAA/D,aACjDU,EAAWV,aAAa,4BAAQ,uBAAGrB,UAAU,eAAb,8BAM7C,yBAAKA,UAAU,OACf,yBAAKA,UAAU,eACX,wBAAIA,UAAU,WAAd,eACA,wBAAIA,UAAU,mBACb+B,EAAWV,aAAa,8BAAY,kBAACF,EAAA,EAAD,CAAQC,UAAU,EAAMpB,UAAU,QAAlC,kBACrC,8CAAoB+B,EAAWE,eAC/B,yCAAeF,EAAWG,UAC1B,sCAAYH,EAAWI,QACvB,2BAAIJ,EAAWK,YAQvB,8BAMhB,SAASC,EAAT,GAAoC,IAAXC,EAAU,EAAVA,SACjB,OAAoB,GAAjBA,EAASC,QACRC,QAAQC,IAAIH,GAER,6BACI,kBAACI,EAAA,EAAD,CAAOC,YAAU,GACjB,+BACI,4BACA,oCACA,4CACA,0CACA,6CAGJ,+BACI,4BACA,4BAAKL,EAAS,GAAGM,MACjB,4BAAKN,EAAS,GAAGO,WAEjB,4BAAKP,EAAS,GAAGQ,UAAUC,mBAAmB,QAAS,CACnDC,IAAK,UACLC,MAAO,UACPC,KAAM,aAGV,4BAAKZ,EAAS,GAAGa,WAAWJ,mBAAmB,QAAS,CACpDC,IAAK,UACLC,MAAO,UACPC,KAAM,gBAKd,kBAAC,IAAD,CAAMjC,GAAG,KAAI,kBAACE,EAAA,EAAD,CAAQK,SAAO,EAACV,MAAM,aAAtB,WAMb,8BAKpB,IA8BesC,EA9BG,SAAA1B,GACd,OACI,yBAAK1B,UAAU,aACX,yBAAKA,UAAU,OAEX,kBAACqD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMrC,GAAG,SAAT,SAChB,kBAACqC,EAAA,EAAD,CAAgBC,QAAM,GAAE7B,EAAM7B,IAAIa,YAK1C,kBAACoB,EAAD,CAAkBC,WAAYL,EAAM7B,IAAKC,MAAO4B,EAAM5B,QAEtD,yBAAKE,UAAU,OACX,yBAAKA,UAAU,eACf,wBAAIA,UAAU,WAAd,mBACA,wBAAIA,UAAU,mBACd,kBAACqC,EAAD,CAAgBC,SAAUZ,EAAMY,e,SCtFjCkB,E,kDAvBX,WAAY9B,GAAQ,uCACVA,G,qDAIN,OACI,6BACI,kBAAC+B,EAAA,EAAD,CAAWC,OAAK,EAAC1D,UAAU,UACvB,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,eAAd,sB,GAZX2D,aC4BNC,MA9Bf,SAAgBlC,GACZ,OACA,yBAAK1B,UAAU,eACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,OAEX,yBAAKA,UAAU,kBACX,2CACA,uDACmB,6BADnB,sCAEmC,6BAFnC,kCAGyB,6BAHzB,mBAIgB,+BAGpB,yBAAKA,UAAU,oCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,mCAAmC6D,KAAK,2CAA0C,uBAAG7D,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmC6D,KAAK,+BAA8B,uBAAG7D,UAAU,oBAChG,uBAAGA,UAAU,kCAAkC6D,KAAK,uBAAsB,uBAAG7D,UAAU,mBACvF,uBAAGA,UAAU,sBAAsB6D,KAAK,WAAU,uBAAG7D,UAAU,4B,+FCdjF8D,E,kDAEF,WAAYpC,GAAO,IAAD,8BACd,cAAMA,IAuCVqC,gBAAkB,SAAAC,GACd,EAAKC,SAAS,CACZnB,UAAWkB,EACXE,WAAU,KA3CE,EAgDlBC,iBAAmB,SAAAH,GACf,EAAKC,SAAS,CACdd,WAAYa,KA/CZ,EAAKI,MAAQ,CAETF,WAAU,EAEVtB,KAAM,GACNyB,QAAS,GACTvB,UAAW,GACXK,WAAY,IAIhB,EAAKmB,kBAAoB,EAAKA,kBAAkBC,KAAvB,gBACzB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKE,cAAgB,EAAKA,cAAcF,KAAnB,gBAhBP,E,yDAqBLG,GAETC,KAAKjD,MAAMkD,WAAWD,KAAKjD,MAAM7B,IAAIqB,GAAIyD,KAAKP,MAAMxB,KAAM+B,KAAKP,MAAMC,QAASM,KAAKP,MAAMtB,UAAW6B,KAAKP,MAAMjB,YAE/GwB,KAAKjD,MAAMmD,mBAAmBF,KAAKjD,MAAM5B,OAEzC4E,EAAMI,mB,wCAIQJ,GACd,IAAMK,EAASL,EAAMK,OACfC,EAAQD,EAAOC,MACfpC,EAAOmC,EAAOnC,KACpB+B,KAAKV,SAAL,eACGrB,EAAOoC,M,oCAmBA,IAAD,OACT,OACI,yBAAKhF,UAAU,mBACf,yBAAKA,UAAU,UACX,kBAACiF,EAAA,EAAD,CAAMC,SAAUP,KAAKH,cACjB,kBAACvE,EAAA,EAAD,CAAKD,UAAU,WACX,kBAACE,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACgF,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAOC,QAAQ,QAAf,QACI,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOrE,GAAG,OAAOlB,UAAU,aAAa4C,KAAK,OACrD4C,YAAY,OACZC,UAAQ,EACRT,MAAOL,KAAKP,MAAMsB,UAClBC,SAAUhB,KAAKL,sBAGvB,kBAACpE,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACgF,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CAAOC,QAAQ,WAAf,gBAEQ,kBAACC,EAAA,EAAD,CAAOC,KAAK,OAAOrE,GAAG,UAAUlB,UAAU,aAAa4C,KAAK,UACxD4C,YAAY,MACZC,UAAQ,EACRT,MAAOL,KAAKP,MAAMwB,OAClBD,SAAUhB,KAAKL,uBAK3B,kBAACrE,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACb,kBAACgF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,aAAf,cAA6C,6BAEzC,kBAAC,IAAD,CACArF,UAAU,0BACN6F,SAAUlB,KAAKP,MAAMtB,UACrB2C,UAAQ,EACRK,gBAAgB,aAChBH,SAAUhB,KAAKZ,gBACfgC,QAAS,IAAIC,SAKzB,kBAAC9F,EAAA,EAAD,CAAKC,GAAI,GACT,kBAACgF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAOC,QAAQ,cAAf,eAAgD,6BAC5C,kBAAC,IAAD,CACIrF,UAAU,0BACV6F,SAAUlB,KAAKP,MAAMjB,WACrB2C,gBAAgB,aAChBL,UAAQ,EACRM,QAASE,kBAAQtB,KAAKP,MAAMtB,UAAU,GACtC6C,SAAUhB,KAAKR,iBACf/C,SAAUuD,KAAKP,MAAMF,eAMjC,kBAACjE,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACT,kBAACgF,EAAA,EAAD,KACU,kBAAChE,EAAA,EAAD,CAAQoE,KAAK,SAASzE,MAAM,YAAYd,UAAU,eAAgBkG,QAAS,kBAAI,EAAKjC,SAAS,CAACkC,UAAS,MAAvG,gBAOd,kBAAChF,EAAA,EAAD,CAAQK,SAAO,EAACV,MAAM,YAAYd,UAAU,aAAckG,QAASvB,KAAKjD,MAAM0E,QAAQC,QAAtF,Y,sCASR,OAA+B,GAA5B1B,KAAKjD,MAAMY,SAASC,OACZoC,KAAKb,cAEPa,KAAKjD,MAAMY,SAASqC,KAAKjD,MAAMY,SAASC,OAAO,GAAG+D,OAASC,SAAS5B,KAAKjD,MAAM8E,MAAMC,OAAOH,OAEzF,yBAAKtG,UAAU,aACf,yBAAKA,UAAU,uBACf,qEAEF,kBAAC,IAAD,CAAMiB,GAAG,SAAQ,kBAACE,EAAA,EAAD,CAAQK,SAAO,EAACV,MAAM,aAAtB,cAKZ6D,KAAKb,gB,+BAKpB,OACI,yBAAK9D,UAAU,aAEX,kBAACqD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMrC,GAAG,KAAT,SAChB,kBAACqC,EAAA,EAAD,CAAgBC,QAAM,GAAtB,oBAGHoB,KAAKF,qB,GApKId,aA2KX+C,cAAW5C,G,QC1JpB6C,E,kDACF,WAAYjF,GAAO,uCACTA,G,qDAED,IAAD,OA0BJ,OACA,6BACI,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOkF,OAAK,EAACC,KAAK,QAAQC,UAAW,kBAAK,kBAAC,EAAD,CAAMlF,KAAM,EAAKF,MAAME,UAEjE,kBAAC,IAAD,CAAOiF,KAAK,sBAAsBC,UA/BxB,SAAC,GAAa,IAAZN,EAAW,EAAXA,MAChB,OAEI,kBAAC,EAAD,CAAW3G,IAAK,EAAK6B,MAAME,KAAKmF,QAAO,SAAClH,GAAD,OAASA,EAAIqB,KAAOqF,SAASC,EAAMC,OAAOH,MAAM,OAAK,GAC5FhE,SAAU,EAAKZ,MAAMY,SAASyE,QAAO,SAACC,GAAD,OAAaA,EAAQV,QAAUC,SAASC,EAAMC,OAAOH,MAAM,OAEhGxG,MAAS0G,EAAMC,OAAO3G,WA2BtB,kBAAC,IAAD,CAAO+G,KAAK,0BAA0BC,UAtB3B,SAAC,GAAa,IAAZN,EAAW,EAAXA,MACjB,OAEI,kBAAC,EAAD,CAAa3G,IAAK,EAAK6B,MAAME,KAAKmF,QAAO,SAAClH,GAAD,OAASA,EAAIqB,KAAOqF,SAASC,EAAMC,OAAOH,MAAM,OAAK,GAC9F1B,WAAY,EAAKlD,MAAMkD,WACvBC,mBAAsB,EAAKnD,MAAMmD,mBAEjC/E,MAAS0G,EAAMC,OAAO3G,MAEtBwC,SAAU,EAAKZ,MAAMY,cAerB,kBAAC,IAAD,CAAUrB,GAAG,WAGjB,kBAAC,EAAD,W,GA3CO0C,aAiDJ+C,cAAWO,aA/DF,SAAA7C,GACpB,MAAO,CACLxC,KAAMwC,EAAMxC,KACZU,SAAU8B,EAAM9B,aAIO,SAAA4E,GAAQ,MAAK,CAEtCtC,WAAY,SAAC0B,EAAO1D,EAAMC,EAAWC,EAAWK,GAApC,OAAmD+D,ECpBzC,SAACZ,EAAO1D,EAAMC,EAAWC,EAAWK,GAApC,MAAoD,CAC1EoC,KCFuB,cDGvB4B,QAAS,CACLb,MAAOA,EACP1D,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXK,WAAYA,IDawDyB,CAAW0B,EAAO1D,EAAMC,EAAWC,EAAUK,KAErH0B,mBAAoB,SAAC/E,GAAD,OAAWoH,ECVD,SAACpH,GAAD,MAAY,CAC1CyF,KCZ+B,sBDa/B4B,QAAS,CACLrH,MAAOA,IDO6B+E,CAAmB/E,QAoDrCmH,CAA6CN,I,0BG1E1DS,EAAO,CAEhB,CACIlG,GAAI,EACJe,cAAe,YACfvB,SAAU,oBACVF,MAAO,gGACPM,MAAO,MACPC,gBAAiB,EACjBmB,SAAU,SACVC,OAAQ,iBACRnB,WAAY,IACZK,cAAc,EACde,QAAS,+WAIb,CACIlB,GAAI,EACJe,cAAe,YACfvB,SAAU,gBACVF,MAAO,+HACPM,MAAO,iBACPC,gBAAiB,EACjBmB,SAAU,oBACVC,OAAQ,kBACRnB,WAAY,KACZK,cAAc,EACde,QAAS,kRAGb,CACIlB,GAAI,EACJe,cAAe,YACfvB,SAAU,oBACVF,MAAO,oLACPM,MAAO,cACPC,gBAAiB,EACjBmB,SAAU,SACVC,OAAQ,UACRnB,WAAY,IACZK,cAAc,EACde,QAAS,sXAGb,CACIlB,GAAI,EACJe,cAAe,YACfvB,SAAU,cACVF,MAAO,gIACPM,MAAO,QACPC,gBAAiB,EACjBmB,SAAU,SACVC,OAAQ,UACRnB,WAAY,IACZK,cAAc,EACde,QAAS,+SCvDJX,EAAO,WAA2B,IAA1B2C,EAAyB,uDAAjBgD,EAAMC,EAAW,uCAC1C,OAAQA,EAAO9B,MACX,IFF2B,sBEIvB,IAAIzF,EAAQuH,EAAOF,QAAQrH,MAEvBwH,EAAWf,SAASzG,GAAS,EAG7ByH,EAAQ,sBAAOnD,EAAMoD,MAAM,EAAG1H,IAAtB,4BACJsE,EAAMtE,IADF,IACUuB,cAAe+C,EAAMtE,GAAOuB,gBADtC,YAEL+C,EAAMoD,MAAMF,KAGnB,OAAOC,EAEX,QACI,OAAOnD,ICnBNqD,EAAW,GCEXC,EAAW,WAA+B,IAA9BtD,EAA6B,uDAArBqD,EAAUJ,EAAW,uCAClD,OAAQA,EAAO9B,MACX,IJJmB,cIMf,IAAIyB,EAAUK,EAAOF,QAErBH,EAAQ9F,GAAKkD,EAAM7B,OAAS,EAG5B,IAAIgF,EAAWnD,EAAMuD,OAAOX,GAC5B,OAAOO,EAEX,QACI,OAAOnD,ICTbwD,G,OCAYC,YACVC,YAAgB,CACZlG,KAAMH,EACNa,SAAUoF,MDkBPK,G,kDAjBb,WAAYrG,GAAO,uCACXA,G,qDAIN,OAEE,kBAAC,IAAD,CAAUkG,MAAOA,GACjB,kBAAC,IAAD,KACE,kBAAC,EAAD,Y,GAXUjE,aEGEqE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3B,MACvB,2D,OCTN4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxG,QAAQwG,MAAMA,EAAMC,c","file":"static/js/main.c9ed54b8.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Card, CardImg, CardImgOverlay,\r\n    CardTitle,Row,Col,CardSubtitle,CardBody,Button, CardText } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n        \r\n//Function recives the car object and index of the array which will be use to update the state of the selected object\r\nfunction RenderCarList({car,index}){\r\n    return(\r\n        <Card className=\"carlistcards\">\r\n            <Row>\r\n            <Col md={3}>\r\n                <CardImg top width=\"100%\" src={car.image} alt={car.carModal} className=\"cardimg\"/>\r\n            </Col>\r\n            <Col md={9}>\r\n                <CardBody>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <CardTitle className=\"carmodal\">{car.carModal}</CardTitle>\r\n                            <CardSubtitle className=\"cardetails\">\r\n                                <span className=\"color\"><span className=\"fa fa-eyedropper fa-sm\"></span> { car.color}</span>\r\n                                <span className=\"seatingcapacity\"><span className=\"fa fa-car fa-sm\"></span>{ car.seatingCapacity} Seater</span>\r\n                                <span className=\"rentperday\"><span className=\"fa fa-inr fa-sm\"></span> { car.rentPerDay} / Day</span> \r\n                            </CardSubtitle>\r\n                        </Col>\r\n                        <Col md={4} className=\"carlistbuttonsContiner\" >\r\n                            {/* This will pass the car id and index in the url  */}\r\n                            <Link to={`/bookings/${car.id}/${index}`} ><Button disabled={!car.availability} style={{margin:\"10%\"}}>Book now</Button></Link>\r\n                            {/* This will pass the car id and index in the url  */}\r\n                            <Link to={`/cars/${car.id}/${index}`} ><Button outline color=\"secondary\">Details</Button></Link>\r\n                        </Col>\r\n                    </Row>\r\n                </CardBody>\r\n            </Col>\r\n            </Row>\r\n        </Card>\r\n        \r\n    );\r\n}\r\n\r\nconst Cars  = (props) => {\r\n    const carslist = props.cars.map((car, index)=>{\r\n        return (\r\n                <div className=\"cards\">\r\n                    {/* pass the car details and index as a parameter index will be used to update the state  */}\r\n\r\n                    <RenderCarList car={car} index={index} /> \r\n                </div>\r\n        );\r\n    })\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <h3>Cars for rent</h3>\r\n                    <hr />\r\n                </div>         \r\n            </div>\r\n            <div>\r\n                {/* cars list starts here */}\r\n                {/* call function for cars list */}\r\n                {carslist}       \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Cars;","import React from 'react';\r\nimport { Card, CardImg, CardText, CardBody,\r\n    CardTitle, Breadcrumb, BreadcrumbItem, Button,Row,Col,CardSubtitle,Table} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n    \r\n\r\n// function returns the car details\r\nfunction RenderCarDetails({carDetails,index}){\r\n        if(carDetails!=null){\r\n            return(\r\n                <React.Fragment>\r\n                    {/* //Create card to show the detials of the car */}\r\n                    <Card className=\"cardetailscard\">\r\n                        <Row>\r\n                        <Col md={7}>\r\n                            <CardImg top width=\"100%\" src={carDetails.image} alt={carDetails.carModal} className=\"cardetailsimg\"  />\r\n                            </Col>\r\n                            <Col md={5}>\r\n                            <CardBody>\r\n                                <CardTitle className=\"carmodal\">{carDetails.carModal}</CardTitle>\r\n                                <CardSubtitle className=\"fullcardetails\">\r\n                                    <span className=\"color\"><span className=\"fa fa-eyedropper fa-sm\"></span> { carDetails.color}</span>\r\n                                    <span className=\"seatingcapacity\"><span className=\"fa fa-car fa-sm\"></span>{ carDetails.seatingCapacity} Seater</span>\r\n                                </CardSubtitle>\r\n                                <h5 className=\"mt-3\"> Rent Per Day: <span className=\"fa fa-inr fa-sm\"></span> { carDetails.rentPerDay}</h5>\r\n                                <Link to={`/bookings/${carDetails.id}/${index}`} ><Button className=\"bookbuttoncardetails\" disabled={!carDetails.availability}>Book now</Button></Link>\r\n                                {carDetails.availability?<p></p>:<p className=\"unavailable\">Currently unavailable!</p>}\r\n                            </CardBody>\r\n                        </Col>\r\n                        </Row>\r\n                    </Card>\r\n                    {/* Show the other details of the car */}\r\n                    <div className=\"row\">\r\n                    <div className=\"col-12 mt-5\">\r\n                        <h3 className=\"heading\">Car Details</h3>\r\n                        <hr className=\"horizontalline\"/>\r\n                        {carDetails.availability?<div></div>:<Button disabled={true} className=\"mb-2\">Not Available </Button>}\r\n                        <p>Vehicle number: {carDetails.vehicleNumber}</p>\r\n                        <p>Fuel type: {carDetails.fuelType}</p>\r\n                        <p>Engine: {carDetails.engine}</p>\r\n                        <p>{carDetails.details}</p>\r\n                    </div>\r\n                    </div>\r\n            </React.Fragment>\r\n               \r\n            );\r\n            }else{\r\n                return(\r\n                <div></div>\r\n            );\r\n        }\r\n    }\r\n\r\n// Function will return the current booking for the vehicle\r\nfunction RenderBookings({bookings}){\r\n        if(bookings.length!=0){\r\n            console.log(bookings);\r\n            return(\r\n                <div>\r\n                    <Table borderless>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>NAME</th>\r\n                        <th>PHONE NUMBER</th>\r\n                        <th>ISSUE DATE</th>\r\n                        <th>RETURN DATE</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr>\r\n                        <td>{bookings[0].name}</td>\r\n                        <td>{bookings[0].contactNo}</td>\r\n                        {/* convert the date in short format */}\r\n                        <td>{bookings[0].issueDate.toLocaleDateString('en-US', {\r\n                            day: '2-digit',\r\n                            month: '2-digit',\r\n                            year: 'numeric',\r\n                            })}</td>\r\n                        {/* convert the date in short format */}\r\n                        <td>{bookings[0].returnDate.toLocaleDateString('en-US', {\r\n                            day: '2-digit',\r\n                            month: '2-digit',\r\n                            year: 'numeric',\r\n                            })}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                    </Table>\r\n                    <Link to='/'><Button outline color=\"secondary\">Back</Button></Link>\r\n                </div>\r\n                \r\n            );\r\n            }else{\r\n                return(\r\n                    <div></div>\r\n            );\r\n        }\r\n    }\r\n// Car details component\r\nconst CarDetail = props => {\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                {/* //this will be used for routing between pages */}\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/cars\">Cars</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>{props.car.carModal}</BreadcrumbItem>\r\n                </Breadcrumb>\r\n            </div>\r\n            {/* Car details starts here */}\r\n            {/* pass the car details and index as a parameter index will be used to update the state  */}\r\n            <RenderCarDetails carDetails={props.car} index={props.index}/>\r\n            {/* //Current booking section starts here */}\r\n            <div className=\"row\">\r\n                <div className=\"col-12 mt-5\">\r\n                <h4 className=\"heading\">Current Booking</h4>\r\n                <hr className=\"horizontalline\"/>\r\n                <RenderBookings bookings={props.bookings}\r\n                />\r\n            </div>\r\n            </div>\r\n        </div>       \r\n        \r\n    );\r\n\r\n}\r\n    \r\n\r\n\r\nexport default CarDetail;","import React, { Component } from 'react';\r\nimport { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Jumbotron fluid className=\"header\">\r\n                    <div className=\"container\">\r\n                        <div className=\"row row-header\">\r\n                            <div className=\"col-12 col-sm-6\">\r\n                                <h1 className=\"mainheading\">RentVroom</h1>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer mt-5\">\r\n        <div className=\"container\">\r\n            <div className=\"row\">             \r\n                 \r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Rent Vroom </h5>\r\n                    <address>\r\n                    RentVroom Pvt. Ltd.<br/>                      \r\n                    No: 296, 3rd Cross Rd, Jakkasandra,<br />\r\n\t\t            1st Block, Kormangla Bengaluru,<br />\r\n                    Karnataka 560034<br />\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-5 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n           \r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\nimport { Breadcrumb, BreadcrumbItem,\r\n    Button, Form, FormGroup, Label, Input, Col, Row} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { addDays } from 'date-fns';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\n\r\nclass BookingForm extends Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            // use to disable the return date input\r\n            isDisable:true,\r\n            //Other states will be used in form\r\n            name: '',\r\n            contact: '',\r\n            issueDate: '',\r\n            returnDate: ''\r\n             \r\n        }\r\n        //bind this keyword with all the functions\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.checkIsBooked = this.checkIsBooked.bind(this);\r\n        // console.log(this.state);\r\n    }\r\n\r\n    //Function invokes when submit is clicked\r\n    handleSubmit(event) {\r\n        //This will add a booking object in Bookings  \r\n        this.props.addbooking(this.props.car.id, this.state.name, this.state.contact, this.state.issueDate, this.state.returnDate);\r\n        //change availablity of the car to false\r\n        this.props.changeavailability(this.props.index);\r\n        //Prevent page from refreshing\r\n        event.preventDefault(); \r\n    }\r\n\r\n    //set state of name and contact number\r\n    handleInputChange(event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        this.setState({\r\n          [name]: value\r\n        });\r\n    }\r\n    //set state of issue date and set state of disable to false so that return date input works  \r\n    handleIssueDate = date => {\r\n        this.setState({\r\n          issueDate: date,\r\n          isDisable:false\r\n        });\r\n    };\r\n\r\n    //set state of return date\r\n    handleReturnDate = date => {\r\n        this.setState({\r\n        returnDate: date\r\n        });\r\n    };\r\n\r\n    // Function returns the booking form\r\n    BookingForm(){\r\n        return(\r\n            <div className=\"row row-content\">\r\n            <div className=\"col-12\">\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <Row className=\"formrow\">\r\n                        <Col md={5}>\r\n                        <FormGroup >\r\n                        <Label htmlFor=\"name\">Name</Label>\r\n                            <Input type=\"text\" id=\"name\" className=\"inputfield\" name=\"name\"\r\n                                placeholder=\"Name\"\r\n                                required\r\n                                value={this.state.firstname}\r\n                                onChange={this.handleInputChange} />\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col md={5}>\r\n                        <FormGroup >\r\n                    <Label htmlFor=\"contact\">Contact Tel.</Label>\r\n        \r\n                            <Input type=\"text\" id=\"contact\" className=\"inputfield\" name=\"contact\"\r\n                                placeholder=\"+91\"\r\n                                required\r\n                                value={this.state.telnum}\r\n                                onChange={this.handleInputChange} />\r\n                    </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    \r\n                    <Row >\r\n                        <Col md={5}>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"issueDate\">Issue Date</Label><br/>\r\n                    \r\n                            <DatePicker\r\n                            className=\"form-control inputfield\"\r\n                                selected={this.state.issueDate}\r\n                                required\r\n                                placeholderText=\"MM/DD/YYYY\"\r\n                                onChange={this.handleIssueDate}\r\n                                minDate={new Date()}\r\n                            />\r\n        \r\n                    </FormGroup>\r\n                    </Col>\r\n                    <Col md={5}>\r\n                    <FormGroup>\r\n                        <Label htmlFor=\"returndate\" >Return Date</Label><br/>\r\n                            <DatePicker\r\n                                className=\"form-control inputfield\"\r\n                                selected={this.state.returnDate}\r\n                                placeholderText=\"MM/DD/YYYY\"\r\n                                required\r\n                                minDate={addDays(this.state.issueDate,1)}\r\n                                onChange={this.handleReturnDate}\r\n                                disabled={this.state.isDisable}\r\n                            />\r\n                \r\n                    </FormGroup>\r\n                    </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <Col md={10}>\r\n                    <FormGroup >\r\n                              <Button type=\"submit\" color=\"secondary\" className=\"submitbutton\"  onClick={()=>this.setState({isbooked:true})}>\r\n                                Book Car\r\n                            </Button>\r\n                      </FormGroup>\r\n                      </Col>\r\n                      </Row>\r\n                </Form>\r\n                <Button outline color=\"secondary\" className=\"backbutton\"  onClick={this.props.history.goBack}>Back</Button>\r\n            </div>\r\n       </div>\r\n        );\r\n    }\r\n\r\n//Function returns Form if the car is not booked\r\n    checkIsBooked(){\r\n        //return form if there are no bookings\r\n        if(this.props.bookings.length==0){\r\n            return this.BookingForm();\r\n        //check if the car is already booked\r\n        }else if(this.props.bookings[this.props.bookings.length-1].carId == parseInt(this.props.match.params.carId)){\r\n                return (\r\n                    <div className=\"container\">\r\n                    <div className=\"alert alert-success\">\r\n                    <strong>Your Booking has been Confirmed!</strong>\r\n                  </div>\r\n                  <Link to=\"/cars\"><Button outline color=\"secondary\">Continue</Button></Link>\r\n                  </div>\r\n                );\r\n            }\r\n            else{\r\n                return this.BookingForm(); \r\n            }\r\n    }\r\n \r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                {/* use to jump between pages */}\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/\">Cars</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>Booking details</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                {/* //Function returns Form if the car is not booked */}\r\n                {this.checkIsBooked()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Enclose bookingform component inside withrouter \r\nexport default withRouter(BookingForm);","\r\nimport React, {Component} from 'react';\r\nimport Cars from './CarComponent';\r\nimport CarDetail from './CardetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport BookingForm from './bookingForm';\r\nimport { Switch, Route, Redirect,withRouter} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { addbooking,changeavailability } from '../redux/ActionCreators';\r\n\r\n\r\n// function that maps the state to props\r\nconst mapStateToProps = state => {\r\n    return {\r\n      cars: state.cars,\r\n      bookings: state.bookings,\r\n    }\r\n  }\r\n//   This will map the dispatch with props\r\n  const mapDispatchToProps = dispatch => ({\r\n    //function for add booking\r\n    addbooking: (carId, name, contactNo, issueDate, returnDate) => dispatch(addbooking(carId, name, contactNo, issueDate,returnDate)),\r\n    //use to change the availability of the vehicle if the car is booked\r\n    changeavailability: (index) => dispatch(changeavailability(index))\r\n  });\r\n\r\nclass Main extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render(){\r\n        const CarWithId = ({match}) => {\r\n            return(\r\n                //Pass the car object using filter function\r\n                <CarDetail car={this.props.cars.filter((car) => car.id === parseInt(match.params.carId,10))[0]}\r\n                bookings={this.props.bookings.filter((booking) => booking.carId === parseInt(match.params.carId,10))}\r\n                // index will be used to update the state of the seleted item                \r\n                index = {match.params.index}\r\n                /> \r\n            );\r\n        }\r\n\r\n        const BookWithId = ({match}) => {\r\n            return(\r\n                //Pass the car object using filter function\r\n                <BookingForm car={this.props.cars.filter((car) => car.id === parseInt(match.params.carId,10))[0]}\r\n                addbooking={this.props.addbooking}\r\n                changeavailability = {this.props.changeavailability}\r\n                // index will be used to update the state of the seleted item\r\n                index = {match.params.index}\r\n                //this will be used to check  if the car is already booked\r\n                bookings={this.props.bookings}\r\n              /> \r\n            );\r\n        }\r\n\r\n        return(\r\n        <div>\r\n            <Header/>\r\n            <Switch>   \r\n                <Route exact path='/cars' component={()=> <Cars cars={this.props.cars} />}  />\r\n                {/* Index will be use to update the state of the selected item */}\r\n                <Route path='/cars/:carId/:index' component={CarWithId} />\r\n                {/* Index will be use to update the state of the selected item */}\r\n                <Route path='/bookings/:carId/:index' component={BookWithId} />\r\n                {/* Default router when no routes found */}\r\n                <Redirect to='/cars' />\r\n            </Switch>\r\n\r\n            <Footer/>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\r\n// Adds Bookig \r\nexport const addbooking = (carId, name, contactNo, issueDate, returnDate) => ({\r\n    type: ActionTypes.ADD_BOOKING,\r\n    payload: {\r\n        carId: carId,\r\n        name: name,\r\n        contactNo: contactNo,\r\n        issueDate: issueDate,\r\n        returnDate: returnDate\r\n    }\r\n});\r\n\r\n//index = index of the car object which is selected. It index will be used to update the state of the selected one \r\nexport const changeavailability = (index) => ({\r\n    type: ActionTypes.CHANGE_AVAILABILITY,\r\n    payload: {\r\n        index: index\r\n    }\r\n});","//Action type use to add the current booking\r\nexport const ADD_BOOKING = 'ADD_BOOKING';\r\n//Action type use to change availablity of the car\r\nexport const CHANGE_AVAILABILITY = 'CHANGE_AVAILABILITY';","//container the car objects\r\n\r\nexport const CARS = [\r\n\r\n    {\r\n        id: 1,\r\n        vehicleNumber: '18 D 4356',\r\n        carModal: 'Hyundai Grand i10',\r\n        image: 'https://gaadiwaadi.com/wp-content/uploads/2017/01/2017-hyundai-grand-i10-facelift-india-5.jpg',\r\n        color: 'Red',\r\n        seatingCapacity: 4,\r\n        fuelType: 'Petrol',\r\n        engine: '998 to 1197 cc',\r\n        rentPerDay: 350,\r\n        availability: true,\r\n        details: 'Hyundai Grand i10 Nios is offered in 8 colours Polar White, Typhoon Silver, Fiery Red,Polar White/Black, Titan Grey, Alpha Blue, Aqua Teal and Aqua Teal/Black. However, some of these colours are available in specific versions. Grand i10 Nios is competing against Maruti Suzuki Swift, Tata Tiago, Hyundai Elite i20, Ford Figo, Maruti Suzuki Ignis and Hyundai Aura.'\r\n\r\n    },\r\n\r\n    {\r\n        id: 2,\r\n        vehicleNumber: '18 D 4356',\r\n        carModal: 'Ford EcoSport',\r\n        image: 'https://stimg.cardekho.com/images/carexteriorimages/630x420/Ford/Ecosport/7347/1579861367280/front-left-side-47.jpg?tr=w-135',\r\n        color: 'Sherwood Brown',\r\n        seatingCapacity: 5,\r\n        fuelType: 'Petrol and Diesel',\r\n        engine: '1496 to 1498 cc',\r\n        rentPerDay: 1350,\r\n        availability: true,\r\n        details: 'Ford EcoSport price starts at ₹ 8.04 Lakh and goes upto ₹ 11.61 Lakh. The price of Petrol version for EcoSport ranges between ₹ 8.04 Lakh - ₹ 11.43 Lakh and the price of Diesel version for EcoSport ranges between ₹ 8.54 Lakh - ₹ 11.61 Lakh.'\r\n    },\r\n\r\n    {\r\n        id: 3,\r\n        vehicleNumber: '18 D 4356',\r\n        carModal: 'Maruti Suzuki XL6',\r\n        image: 'https://gumlet.assettype.com/evoindia%2F2019-11%2Fb183b52f-835a-4be4-b8c3-f285ca41b3d2%2FErtiga_front.jpg?rect=0%2C105%2C2133%2C1200&auto=format%2Ccompress&fit=max&w=480&dpr=2.6',\r\n        color: 'Glossy Blue',\r\n        seatingCapacity: 6,\r\n        fuelType: 'Petrol',\r\n        engine: '1462 cc',\r\n        rentPerDay: 850,\r\n        availability: true,\r\n        details: 'Maruti Suzuki XL6 XL6 is offered in 6 colours: Metallic Premium Silver, Metallic Magma Gray, Prime Auburn Red, Pearl Brave Khaki, Pearl Arctic White and Nexa Blue. However, some of these colours are available in specific versions. XL6 is competing against Maruti Suzuki Ertiga, Mahindra Marazzo, Renault Captur, Maruti Suzuki S-Cross, Mahindra TUV300 PLUS and Kia Seltos'\r\n    },\r\n\r\n    {\r\n        id: 4,\r\n        vehicleNumber: '18 D 4356',\r\n        carModal: 'Honda CR -v',\r\n        image: 'https://images.cdn.circlesix.co/image/1/640/0/uploads/media/2018-08/10/50e6f16c7feffdee/136727_honda_heritage_-_2010_cr-z.jpg',\r\n        color: 'White',\r\n        seatingCapacity: 6,\r\n        fuelType: 'Petrol',\r\n        engine: '1997 cc',\r\n        rentPerDay: 450,\r\n        availability: true,\r\n        details: 'This car is available in 5 colours viz, Golden Brown Metallic, White Orchid Pearl, Modern Steel Metallic, Radiant Red and Lunar Silver Metallic. Honda CR-V competes with Volkswagen Tiguan AllSpace, Skoda Kodiaq, Mahindra Alturas G4, Mitsubishi Pajero Sport, Mitsubishi Outlander and Ford Endeavour.'\r\n    }\r\n\r\n\r\n];","import { CARS } from '../shared/cars';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Cars = (state = CARS, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.CHANGE_AVAILABILITY:\r\n            //index = index of the car object which is selected. It index will be used to update the state of the selected one \r\n            var index = action.payload.index;\r\n            //New index will be use in slice function\r\n            var newIndex = parseInt(index) + 1;\r\n            // console.log(newIndex);\r\n            //create new state and udpate the selected index state(update availability)\r\n            var newstate = [...state.slice(0, index),\r\n                {...state[index], availability: !state[index].availability },\r\n                ...state.slice(newIndex)\r\n            ];\r\n            // console.log(newstate);\r\n            return newstate;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","// Will use to store the bookings\r\nexport const BOOKINGS = [\r\n\r\n]","import { BOOKINGS } from '../shared/bookings';\r\nimport * as ActionTypes from './ActionTypes';\r\n\r\nexport const Bookings = (state = BOOKINGS, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_BOOKING:\r\n            //store the parameters recived by the form\r\n            var booking = action.payload;\r\n            //Generate the id \r\n            booking.id = state.length + 1;\r\n            // console.log(\"Booking: \", booking);\r\n            //create the new state to be sent\r\n            var newstate = state.concat(booking);\r\n            return newstate;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React, {Component} from 'react';\nimport Main from './components/MainComponent'\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\nimport './App.css';\n\nconst store = ConfigureStore();\n\nclass App extends Component{\n  \n  constructor(props){\n    super(props);\n  }\n\n  render(){\n    return(\n      // Provide the store gloabally\n      <Provider store={store}>\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n      </Provider>\n      \n    );\n  }\n}\n\nexport default App;\n","import { createStore, combineReducers } from 'redux';\r\nimport { Cars } from './cars';\r\nimport { Bookings } from './bookings';\r\n\r\n\r\n//Combine the reducer functions \r\nexport const ConfigureStore = () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            cars: Cars,\r\n            bookings: Bookings,\r\n        })\r\n    );\r\n\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { isMetaProperty } from '@babel/types';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}